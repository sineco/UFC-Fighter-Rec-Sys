fighters$country == ""
[fighters$country
fighters$country
levels(fighters$country)
url_fights <- "https://docs.google.com/spreadsheets/d/1sQOtIwkEiTe4kwwRHw5bwi72ZJHXlAVcCNMImr-Ml6U/edit#gid=0"
url_fighters <- "https://docs.google.com/spreadsheets/d/1z3QX0uWXv-XHX2Nfuj6zZHrfEeXI3A9CKWkrGaBzB8s/edit#gid=0"
fights_text <- gsheet2text(url_fights, format = "csv", sheetid = NULL)
fights <- read.csv(text=fights_text)
write.csv(fights, file = "./data/allFigths.csv")
fighters_text <- gsheet2text(url_fighters, format = "csv", sheetid = NULL)
fighters <- read.csv(text = fighters_text)
write.csv(fighters, file = "./data/allFighters.csv")
dateDownloaded <- date()
## Preprocess
summary(fighters)
summary(fights)
# remove duplicated rows
fighters <- fighters[!duplicated(fighters$fid),]
#Check if there are duplicates
duplicated <- nrow(unique(fights)) != nrow(fights)
if (duplicated){
dt <- data.table(fights)
fights <- unique(dt)
}
# Unify country names
fighters$country[fighters$country == "USA"] <- "United States"
fighters$country[fighters$country == "Finnland"] <- "Finland"
fighters$country == ""
fighters$country[fighters$country == ""] <- "N/A"
fighters$country[fighters$country == ""] <- "NA"
url_fights <- "https://docs.google.com/spreadsheets/d/1sQOtIwkEiTe4kwwRHw5bwi72ZJHXlAVcCNMImr-Ml6U/edit#gid=0"
url_fighters <- "https://docs.google.com/spreadsheets/d/1z3QX0uWXv-XHX2Nfuj6zZHrfEeXI3A9CKWkrGaBzB8s/edit#gid=0"
fights_text <- gsheet2text(url_fights, format = "csv", sheetid = NULL)
fights <- read.csv(text=fights_text)
fighters_text <- gsheet2text(url_fighters, format = "csv", sheetid = NULL)
fighters <- read.csv(text = fighters_text)
fighters <- fighters[!duplicated(fighters$fid),]
#Check if there are duplicates
duplicated <- nrow(unique(fights)) != nrow(fights)
fighters$country[fighters$country == "USA"] <- "United States"
fighters$country[fighters$country == "Finnland"] <- "Finland"
fighters$country <- factor(fighters$country)
levels(fighters$country)
fighters$country == "Finnland"
fighters$country == "Finland"
levels(fighters$country)
levels(fighters$country == "Taiwan")
levels(fighters$country == "Venezuela")
levels(fighters$country == as.factor("Venezuela"))
levels(fighters$country == Venezuela)
fighters$country == Venezuela
fighters$country == "Venezuela"
fighters$country == "Brazil"
fighters$country == ""
fighters$country[fighters$country == ""] <- "N/A"
fighters$country[fighters$country == ""] <- "aaaa"
url_fights <- "https://docs.google.com/spreadsheets/d/1sQOtIwkEiTe4kwwRHw5bwi72ZJHXlAVcCNMImr-Ml6U/edit#gid=0"
url_fighters <- "https://docs.google.com/spreadsheets/d/1z3QX0uWXv-XHX2Nfuj6zZHrfEeXI3A9CKWkrGaBzB8s/edit#gid=0"
fights_text <- gsheet2text(url_fights, format = "csv", sheetid = NULL)
fights <- read.csv(text=fights_text)
write.csv(fights, file = "./data/allFigths.csv")
fighters_text <- gsheet2text(url_fighters, format = "csv", sheetid = NULL)
fighters <- read.csv(text = fighters_text)
write.csv(fighters, file = "./data/allFighters.csv")
dateDownloaded <- date()
## Preprocess
summary(fighters)
summary(fights)
# remove duplicated rows
fighters <- fighters[!duplicated(fighters$fid),]
#Check if there are duplicates
duplicated <- nrow(unique(fights)) != nrow(fights)
if (duplicated){
dt <- data.table(fights)
fights <- unique(dt)
}
# Unify country names
fighters$country[fighters$country == "USA"] <- "United States"
fighters$country[fighters$country == "Finnland"] <- "Finland"
fighters$country <- factor(fighters$country)
num_fighters_by_country <- data.frame(summary(fighters$country))
df <- data.frame(country = row.names(num_fighters_by_country), number = num_fighters_by_country$summary.fighters.country.)
levels(df$country)[levels(df$country)==""] <- "N/A"
df$country
fighters %>% group_by(country) %>% summarise(country)
df <- data.frame(summary(fighters$country))
library(googleVis)
Geo=gvisGeoChart(df, locationvar="country",
colorvar="number",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
df <- data.frame(summary(fighters$country))
df
num_fighters_by_country <- data.frame(summary(fighters$country))
df <- data.frame(country = row.names(num_fighters_by_country), number = num_fighters_by_country$summary.fighters.country.)
levels(df$country)[levels(df$country)==""] <- "N/A"
df
Geo=gvisGeoChart(df, locationvar="country",
colorvar="number",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
?merge
merged <- merge(x = fights, y = fighters, by.x = 'f1fid', by.y = 'fid')
head(merged)
merged$f1result == "win"
filter(fighters, f1result = 'win', method = 'selected_method')
filter(fighters, f1result == 'win', method == 'selected_method')
library(dplyr)
filter(fighters, f1result == 'win', method == 'selected_method')
filter(merged, f1result == 'win', method == 'selected_method')
filter(merged, f1result == 'win', method == selected_method)
selected_method <- 'submission'
filter(merged, f1result == 'win', method == 'submission')
head(merged)
filter(merged, f1result == 'win')
head(merged)
filter(merged, f1result == 'win', method == 'Submission')
wins_by_submission <- filter(merged, f1result == 'win', method == 'Submission')
dim(merged)
dim(fights)
merged <- merge(x = fights, y = fighters, by.x = 'f1fid', by.y = 'fid', all.x=TRUE)
dim(merged)
merged <- merge(x = fights, y = fighters, by.x = 'f1fid', by.y = 'fid', all.y=TRUE)
dim(merged)
selected_method <- 'Submission'
wins_by_submission <- filter(merged, f1result == 'win', method == 'Submission')
wins_by_submission <- filter(merged, f1result == 'win', method == 'Submission')
head(wins_by_submission)
head(wins_by_submission$name)
str(wins_by_submission)
str(fighters)
wins_by_submission$name
table(wins_by_submission$name)
wins_by_submission$name
order(wins_by_submission$name)
sort(wins_by_submission$name)
table(sort(wins_by_submission$name))
plot(table(sort(wins_by_submission$name)))
plot(sort(table(wins_by_submission$name)))
plot(table(wins_by_submission$name))
merged <- merge(x = fights, y = fighters, by.x = 'f1fid', by.y = 'fid',
all.x=TRUE)
selected_method <- 'Submission'
wins_by_submission <- filter(merged, f1result == 'win', method == 'Submission')
head(wins_by_submission$name)
str(wins_by_submission)
require(devtools)
install_github('rCharts', 'ramnathv')
wins_by_submission <- subset(merged, method == 'Submission')
head(wins_by_submission)
hair_eye = as.data.frame(HairEyeColor)
head(hair_eye)
hair_eye
names(merged)
n1 <- nPlot(class ~ method, group = "method_d", data = merged, type = "multiBarChart")
library(rCharts)
wins_by_submission <- subset(merged, method == 'Submission')
n1 <- nPlot(class ~ method, group = "method_d", data = merged, type = "multiBarChart")
n1$print("chart3")
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print()
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$show()
wins_by_submission <- subset(merged, method == 'Submission')
n1 <- nPlot(class ~ method, group = "method_d", data = merged, type = "multiBarChart")
n1$print("chart3")
n1$show()
?subset
wins_by_submission <- subset(merged, select = c('class', 'method', 'method_d') method == 'Submission')
wins_by_submission <- subset(merged, select = 'class' method == 'Submission')
wins_by_submission <- subset(merged, select = 'class', method == 'Submission')
wins_by_submission <- subset(merged, select = class, method == 'Submission')
wins_by_submission <- subset(merged, select = c(class), method == 'Submission')
wins_by_submission <- subset(merged, select = c(class, method), method == 'Submission')
n1 <- nPlot(class ~ method, group = "method_d", data = merged, type = "multiBarChart")
n1$print("chart3")
wins_by_submission %>%
group_by(method_d) %>%
summarise(no_rows = length(method_d))
wins_by_submission
head()ins_by_submission
head(wins_by_submission)
wins_by_submission <- subset(merged, select = c(class, method, method_d),
method == 'Submission')
head(wins_by_submission)
wins_by_submission
wins_by_submission
wins_by_submission
wins_by_submission %>%
group_by(method_d) %>%
summarise(no_rows = length(method_d))
a<- wins_by_submission %>%
group_by(method_d) %>%
summarise(no_rows = length(method_d))
a
class(a)
submission_df <- wins_by_submission %>%
group_by(method_d) %>%
summarise(no_rows = length(method_d))
wins_by_submission <- subset(merged, select = c( method, method_d),
method == 'Submission')
wins_by_submission
submission_df <- wins_by_submission %>%
group_by(method_d) %>%
summarise(no_rows = length(method_d))
submission_df
n1 <- nPlot(no_rows ~ method_d, group = "method_d", data = submission_df, type = "multiBarChart")
n1$print("chart3")
n1$show()
n1 <- nPlot(no_rows ~ method_d, group = "method_d", data = submission_df,
type = "multiBarChart")
n1$print("chart3")
n1$show()
wins_by_submission <- subset(merged, select = c( method, method_d),
method == 'Decision')
submission_df <- wins_by_submission %>%
group_by(method_d) %>%
summarise(no_rows = length(method_d))
n1 <- nPlot(no_rows ~ method_d, group = "method_d", data = submission_df,
type = "multiBarChart")
n1$print("chart3")
n1$show()
wins <- subset(merged, select = c( method, method_d),
method == 'Decision')
wins
str(wins)
levels(wins)
levels(wins$method_d)
wins <- subset(merged, select = c( method, method_d),
method == 'Decision')
levels(wins$method_d)
wins$method_d
unique(wins$method_d)
?gsheet2text
?gsheet2text
str(fights)
fights
url_fights <- "https://docs.google.com/spreadsheets/d/1sQOtIwkEiTe4kwwRHw5bwi72ZJHXlAVcCNMImr-Ml6U/edit#gid=0"
url_fighters <- "https://docs.google.com/spreadsheets/d/1z3QX0uWXv-XHX2Nfuj6zZHrfEeXI3A9CKWkrGaBzB8s/edit#gid=0"
fights_text <- gsheet2text(url_fights, format = "csv", sheetid = NULL)
fights <- read.csv(text=fights_text)
write.csv(fights, file = "./data/allFigths.csv")
fighters_text <- gsheet2text(url_fighters, format = "csv", sheetid = NULL)
fighters <- read.csv(text = fighters_text)
write.csv(fighters, file = "./data/allFighters.csv")
fights <- read.csv("./data/allFigths.csv", header = TRUE, na.strings = c(""))
fighters <- read.csv("./data/allFighters.csv", header = TRUE,
na.strings = c(""))
dateDownloaded <- date()
## Preprocess
summary(fighters)
summary(fights)
# remove duplicated rows
fighters <- fighters[!duplicated(fighters$fid),]
#Check if there are duplicates
duplicated <- nrow(unique(fights)) != nrow(fights)
if (duplicated){
dt <- data.table(fights)
fights <- unique(dt)
}
# Unify country names
fighters$country[fighters$country == "USA"] <- "United States"
fighters$country[fighters$country == "Finnland"] <- "Finland"
fighters$country <- factor(fighters$country)
num_fighters_by_country <- data.frame(summary(fighters$country))
df <- data.frame(country = row.names(num_fighters_by_country), number = num_fighters_by_country$summary.fighters.country.)
levels(df$country)[levels(df$country)==""] <- "N/A"
library(dplyr)
# Fighters per country
library(googleVis)
Geo=gvisGeoChart(df, locationvar="country",
colorvar="number",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
# Fighters with most submissions
merged <- merge(x = fights, y = fighters, by.x = 'f1fid', by.y = 'fid',
all.x=TRUE)
selected_method <- 'Submission'
wins_by_submission <- filter(merged, f1result == 'win', method == 'Submission')
head(wins_by_submission$name)
str(wins_by_submission)
# Number of wins by type
require(devtools)
install_github('rCharts', 'ramnathv')
library(rCharts)
wins <- subset(merged, select = c( method, method_d),
method == 'Decision')
wins
submission_df <- wins %>%
group_by(method_d) %>%
summarise(no_rows = length(method_d))
n1 <- nPlot(no_rows ~ method_d, group = "method_d", data = submission_df,
type = "multiBarChart")
n1$print("chart3")
n1$show()
submission_df
wins <- subset(merged, select = c( method, method_d),
method == 'Decision')
wind_freq <- wins %>%
group_by(method_d) %>%
summarise(no_rows = length(method_d))
wins <- subset(merged, select = c( method, method_d),
method == 'Decision')
wins_freq <- wins %>%
group_by(method_d) %>%
summarise(no_rows = length(method_d))
n1 <- nPlot(no_rows ~ method_d, group = "method", data = wins_freq,
type = "multiBarChart")
n1$print("chart3")
n1$show()
wins_freq <- wins %>%
group_by(method_d) %>%
summarise(no_rows = length(method_d))
wins_freq <- fights %>%
group_by(method_d) %>%
summarise(no_rows = length(method_d))
wins_freq
wins_freq
plot(wins_freq)
wins_freq <- fights %>%
group_by(method, method_d) %>%
summarise(no_rows = length(method_d))
wins_freq
n1 <- nPlot(no_rows ~ method_d, group = "method", data = wins_freq,
type = "multiBarChart")
n1$print("chart3")
n1$show()
wins_freq
plot(wins_freq)
wins_freq <- fights %>%
group_by(method, method_d) %>%
summarise(no_rows = length(method_d))
View(wind_freq)
View(wind_freq)
View(wins_freq)
wins <- subset(merged, select = c( method, method_d),
method == 'Decision')
wins
wins_decision <- subset(merged, select = c( method, method_d),
method == 'Decision')
wins_decision
head(wins_decision)
summarise(wins_decision, no_rows = length(method_d))
wins_decision <- subset(merged, select = c( method, method_d),
method == 'Decision')
wins_decision
head(wins_decision)
wins_decision <- subset(merged, select = c( method, method_d),
method == 'Decision')
wins_freq <- fights %>%
group_by(method, method_d) %>%
summarise(no_rows = length(method_d))
wins_decision <- subset(merged, select = c(class, method, method_d),
method == 'Decision')
head(wins_decision)
wins_decision <- subset(merged, select = c(name, class, method, method_d),
method == 'Decision')
wins_decision
wins_decision <- subset(merged, select = c(name, class, method, method_d),
method == 'Decision')
wins_freq <- wins_decision %>%
group_by(method, method_d) %>%
summarise(no_rows = length(method_d))
wins_freq
?nplot
wins_freq <- wins_decision %>%
group_by(method, method_d) %>%
summarise(freq = length(method_d))
nPlot(method_d ~ freq, data data = wins_freq)
wins_freq <- wins_decision %>%
group_by(method, method_d) %>%
summarise(freq = length(method_d))
head(wins_freq)
nPlot(method_d ~ freq, data = wins_freq)
n1 <- nPlot(method_d ~ freq, data = wins_freq)
n1 <- nPlot(method_d ~ freq, data = wins_freq)
n1$print("chart wins decision")
n1$show()
n1
n1$print("chart wins decision")
n1$show()
n1 <- nPlot(method_d ~ freq, data = wins_freq, type = "multiBarChart")
n1$print("chart wins decision")
n1$show()
n1 <- nPlot(method_d ~ freq, group = "method", data = wins_freq, type = "multiBarChart")
n1$print("chart wins decision")
n1$show()
n1 <- nPlot(no_rows ~ method_d, group = "method", data = wins_freq,
type = "multiBarChart")
n1 <- nPlot(freq ~ method_d, group = "method", data = wins_freq,
type = "multiBarChart")
n1$print("chart3")
n1$show()
wins_decision <- subset(merged, select = c(name, class, method, method_d),
method == 'Decision' & method == 'KO')
wins_freq <- wins_decision %>%
group_by(method, method_d) %>%
summarise(freq = length(method_d))
n1 <- nPlot(freq ~ method_d, group = "method", data = wins_freq,
type = "multiBarChart")
n1$print("chart3")
n1$show()
wins_decision
wins_decision <- subset(merged, select = c(name, class, method, method_d),
method == 'Decision' & method == 'KO')
wins_decision
?subset
wins_decision <- subset(merged, select = c(name, class, method, method_d),
method == 'Decision', method == 'KO')
wins_decision <- subset(merged, select = c(name, class, method, method_d),
method == 'Decision')
wins_decision <- subset(merged, select = c(name, class, method, method_d),
method %in% c('Decision', 'KO'))
wins_decision <- subset(merged, select = c(name, class, method, method_d),
method %in% c('Decision'))
wins_decision <- subset(merged, select = c(name, class, method, method_d),
method %in% c('Decision', 'KO'))
wins_decision
wins_decision <- subset(merged, select = c(name, class, method, method_d),
method %in% c('Decision', 'KO'))
wins_decision$method
wins_decision$method_d
unique(wins_decision$method_d)
wins_decision_KO <- subset(merged, select = c(name, class, method, method_d),
method %in% c('Decision', 'KO'))
wins_freq <- wins_decision_KO %>%
group_by(method, method_d) %>%
summarise(freq = length(method_d))
wins_freq
n1 <- nPlot(freq ~ method_d, group = "method", data = wins_freq,
type = "multiBarChart")
n1$print("chart3")
n1$show()
wins_decision_KO <- subset(merged, select = c(name, class, method, method_d),
method %in% c('KO')) #'Decision'
wins_freq <- wins_decision_KO %>%
group_by(method, method_d) %>%
summarise(freq = length(method_d))
n1 <- nPlot(freq ~ method_d, group = "method", data = wins_freq,
type = "multiBarChart")
n1$print("chart3")
n1$show()
wins_freq
plot(wins_freq)
wins_decision_KO
plot(wins_decision_KO)
library(ggplot2)
g <- ggplot(wins_freq, aes(freq, method_d))
g + geom_bar()
g <- ggplot(wins_freq, aes(freq, method_d))
g + geom_bar()
g <- ggplot(wins_freq, aes(freq, method_d))
g + geom_bar(position = "stack")
g <- ggplot(wins_freq, aes(method_d, freq))
g + geom_bar(position = "stack")
g + geom_bar(stat="identity")
g <- ggplot(wins_freq, aes(freq, method_d))
g + geom_bar(stat="identity")
g <- ggplot(wins_freq, aes(method_d, freq))
g + geom_bar(stat="identity")
g <- ggplot(wins_freq, aes(method_d, freq))
g <- g + geom_bar(stat="identity") +
g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(ggplot2)
g <- ggplot(wins_freq, aes(method_d, freq))
g <- g + geom_bar(stat="identity")
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(ggplot2)
g <- ggplot(wins_freq, aes(method_d, freq))
g <- g + geom_bar(stat="identity")
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g
shiny::runApp('~/Dropbox/Personal/Coursera Developing Data Products/sampleHist')
runApp('~/Dropbox/Personal/Coursera Developing Data Products/sampleHist')
runApp('~/Dropbox/Personal/Coursera Developing Data Products/sampleHist')
runApp('~/Dropbox/Personal/Coursera Developing Data Products/sampleHist')
runApp('~/Dropbox/Personal/Coursera Developing Data Products/sampleHist')
?reactive
runApp()
runApp()
runApp()
?subset
runApp()
as.character(fighters$name)
class()s.character(fighters$name)
class(as.character(fighters$name))
fighters$name <- as.character(fighters$name)
runApp()
rm(list = ls())
list = ls()
rm(list = ls())
runApp()
getws()
getwd()
ls
ls()
dir()
fights <- read.csv("./data/allFigths.csv", header = TRUE, na.strings = c(""))
fighters <- read.csv("./data/allFighters.csv", header = TRUE,
na.strings = c(""))
fighters$name <- as.character(fighters$name)
rm(list())
rm(list = ls())
